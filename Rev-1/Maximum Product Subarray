#include <bits/stdc++.h> 
using namespace std; 

#define ll  long long
#define pi pair<ll, ll> 
#define maxheap(dt) priority_queue<dt>
#define minheap(dt) priority_queue<dt, vector<dt>, greater<dt>>
#define nl cout << "\n";
#define ITER(i, a) for(auto i = a.begin(); i != a.end(); i++)
#define FOR(i, a, n) for(ll i = a; i < (n); i++)
#define NFOR(i, n, a) for(ll i = n-1; i >= a; i--)
#define NITER(i, a) for(auto i = a.end(); i != a.begin(); i--)
#define all(v) (v).begin(), (v).end()
#define twhile ll t; cin >> t; while(t--)
#define IOP freopen("test.txt", "r", stdin); freopen("output.txt", "w", stdout);
#define FIO ios_base::sync_with_stdio(false); cin.tie(NULL);

const ll dd = 3e5 + 7;
const ll mod = 1e9 + 7;  

/* ----------------------------------------------------------------------------------------------------*/

void solve() {

    ll n;
    cin >> n;

    ll a[n];
    FOR(i, 0, n) cin >> a[i];

//  wont work for cases [0, 0, -20, 0] or [0, -2, 0, 0, -20]: array with only 0 & -ve. Handle separately
    ll minp = a[0], maxp = a[0], ans = a[0];
    FOR(i, 1, n) {  
        if(a[i] == 0) maxp = 1, minp = 1;
        ll temp = maxp;
        maxp = max(max(a[i]*maxp, a[i]*minp), a[i]);
        minp = min(min(a[i]*temp, a[i]*minp), a[i]);
        ans = max(ans, maxp);
    }
    cout << ans;
    nl
}

/*-----------------------------------------------------------------------------------------------------*/

int main(){

    FIO
    IOP
    twhile 
        solve();
    return 0;
}


/*
1
7
1 -2 -3 0 7 -8 -2

112

*/
